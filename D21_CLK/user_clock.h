#ifndef _USER_CLOCK_H_

#define _USER_CLOCK_H_


/*
#define SYSCTRL_ONDEMAND			0x0080
#define SYSCTRL_RUNSTDBY			0x0040
#define SYSCTRL_XTALEN				0x0004
#define SYSCTRL_ENABLE				0x0002
#define SYSCTRL_XOSC_STARTUP		0xF000
#define SYSCTRL_XOSC_STARTUP_SHIFT	12
#define SYSCTRL_XOSC_AMPGC			0x0800
#define SYSCTRL_XOSC_GAIN			0x0700
#define SYSCTRL_XOSC_GAIN_SHIFT		8

#define SYSCTRL_XOSC32K_AAMPEN		0x0020
#define SYSCTRL_XOSC32K_EN32K		0x0008
#define SYSCTRL_XOSC32K_WRTLOCK		0x1000
#define SYSCTRL_XOSC32K_STARTUP		0x0700
#define SYSCTRL_XOSC32K_STARTUP_SHIFT	8

#define SYSCTRL_OSC32K_WRTLOCK		0x00001000
#define SYSCTRL_OSC32K_STARTUP		0x00000700
#define SYSCTRL_OSC32K_STARTUP_SHIFT	8
#define SYSCTRL_OSC32K_CALIB		0x007F0000
#define SYSCTRL_OSC32K_CALIB_SHIFT	16

#define SYSCTRL_OSC8M_PRESC			0x00000300
#define SYSCTRL_OSC8M_PRESC_SHIFT	8
#define SYSCTRL_OSC8M_CALIB			0x0FFF0000
#define SYSCTRL_OSC8M_CALIB_SHIFT	16
#define SYSCTRL_OSC8M_FRANGE		0xC0000000
#define SYSCTRL_OSC8M_FRANGE_SHIFT	30

#define SYSCTRL_DFLLCTRL_USBCRM		0x0040
#define SYSCTRL_DFLLCTRL_LLAW		0x0020
#define SYSCTRL_DFLLCTRL_STABLE		0x0008
#define SYSCTRL_DFLLCTRL_MODE		0x0004

#define SYSCTRL_DFLLCTRL_CCDIS		0x0100
#define SYSCTRL_DFLLCTRL_QLDIS		0x0200
#define SYSCTRL_DFLLCTRL_BPLCKC		0x0400
#define SYSCTRL_DFLLCTRL_WAITLOCK	0x0800

#define SYSCTRL_DFLLVAL_FINE		0x000003FF
#define SYSCTRL_DFLLVAL_COARSE		0x0000FC00
#define SYSCTRL_DFLLVAL_COARSE_SHIFT	10
#define SYSCTRL_DFLLVAL_DIFF		0xFFFF0000
#define SYSCTRL_DFLLVAL_DIFF_SHIFT	16

#define SYSCTRL_DFLLMUL_MUL			0x0000FFFF
#define SYSCTRL_DFLLMUL_FSTEP		0x03FF0000
#define SYSCTRL_DFLLMUL_FSTEP_SHIFT	16
#define SYSCTRL_DFLLMUL_CSTEP		0xFC000000
#define SYSCTRL_DFLLMUL_CSTEP_SHIFT	26
*/
















#define	USE_CLKCTRL_WRTLOCK	0x8000
#define	USE_CLKCTRL_CLKEN	0x4000
		
#define	USE_GCLKGEN_SHIFT	0x08
		
typedef enum		
{
	USE_GCLKGEN00=0x00,
	USE_GCLKGEN01,
	USE_GCLKGEN02,
	USE_GCLKGEN03,
	USE_GCLKGEN04,
	USE_GCLKGEN05,
	USE_GCLKGEN06,
	USE_GCLKGEN07,
	USE_GCLKGEN08,
	USE_GCLKGEN_ENDMARK = 0xFF,
}GCLKGEN;


typedef enum
{	
/*	
	MODULE_CLK_DFLL48M_REF=0x00,
	MODULE_CLK_DPLL,
	MODULE_CLK_DPLL_32K,
	MODULE_CLK_WDT,
	MODULE_CLK_RTC,
	MODULE_CLK_EIC,
	MODULE_CLK_USB,
	MODULE_CLK_EVSYS_CH00,
	MODULE_CLK_EVSYS_CH01,
	MODULE_CLK_EVSYS_CH02,
	MODULE_CLK_EVSYS_CH03,
	MODULE_CLK_EVSYS_CH04,
	MODULE_CLK_EVSYS_CH05,
	MODULE_CLK_SERCOMX,
	MODULE_CLK_SERCOM0,
	MODULE_CLK_SERCOM1,
	MODULE_CLK_SERCOM2,
	MODULE_CLK_TCC0,
	MODULE_CLK_TCC1,
	MODULE_CLK_ADC,
	MODULE_CLK_AC_DIG,
	MODULE_CLK_AC_ANA,
	MODULE_CLK_DAC,
	MODULE_CLK_PTC,
*/




	MODULE_CLK_DFLL48M_REF=0x00,	//0x00
	MODULE_CLK_DPLL,		//0x01
	MODULE_CLK_DPLL_32K,	//0x02
	MODULE_CLK_WDT,			//0x03
	MODULE_CLK_RTC,			//0x04
	MODULE_CLK_EIC,			//0x05
	MODULE_CLK_USB,			//0x06
	MODULE_CLK_EVSYS_CH00,	//0x07
	MODULE_CLK_EVSYS_CH01,	//0x08
	MODULE_CLK_EVSYS_CH02,	//0x09
	MODULE_CLK_EVSYS_CH03,	//0x0A
	MODULE_CLK_EVSYS_CH04,	//0x0B
	MODULE_CLK_EVSYS_CH05,	//0x0C
	MODULE_CLK_EVSYS_CH06,	//0x0D
	MODULE_CLK_EVSYS_CH07,	//0x0E
	MODULE_CLK_EVSYS_CH08,	//0x0F
	MODULE_CLK_EVSYS_CH09,	//0x10
	MODULE_CLK_EVSYS_CH10,	//0x11
	MODULE_CLK_EVSYS_CH11,	//0x12
	MODULE_CLK_SERCOMX,		//0x13
	MODULE_CLK_SERCOM0,		//0x14
	MODULE_CLK_SERCOM1,		//0x15
	MODULE_CLK_SERCOM2,		//0x16
	MODULE_CLK_SERCOM3,		//0x17
	MODULE_CLK_SERCOM4,		//0x18
	MODULE_CLK_SERCOM5,		//0x19
	MODULE_CLK_TCC_0_1,		//0x1A
	MODULE_CLK_TCC_2_3,		//0x1B
	MODULE_CLK_TC_4_5,		//0x1C
	MODULE_CLK_TC_6_7,		//0x1D
	MODULE_CLK_ADC,			//0x1E
	MODULE_CLK_AC_DIG,		//0x1F
	MODULE_CLK_AC_ANA,		//0x20
	MODULE_CLK_DAC,			//0x21
	MODULE_CLK_PTC,			//0x22
	MODULE_CLK_I2S_CH0,		//0x23
	MODULE_CLK_I2S_CH1,		//0x24

	MODULE_CLK_ENDMARK = 0xFF,
}MODULE_CLK_ID;













typedef struct MODULECLOCK
{		
	MODULE_CLK_ID id;
	GCLKGEN src;
	unsigned short flag;
}MduleClock;



#define USE_GCLKSRC_SHIFT 8
#define USE_GCLKDIV_SHIFT 8

typedef enum
{
	GCLK_SRC_XOSC=0x00,
	GCLK_SRC_GCLKIN,
	GCLK_SRC_GCLKGEN1,
	GCLK_SRC_OSCULP32K,
	GCLK_SRC_OSC32K,
	GCLK_SRC_XOSC32K,
	GCLK_SRC_OSC8M,
	GCLK_SRC_DFLL48M,
	GCLK_SRC_FDPLL96M,
}GCLKSRC;



#define	GCLK_CTRL_RUNSTDBY	0x00200000
#define	GCLK_CTRL_USE_DIVIDER	0x00100000
#define	GCLK_CTRL_NOUSE_DIVIDER	0x00000000
#define	GCLK_CTRL_OUTPUT_ENABLE	0x00080000
#define	GCLK_CTRL_OUTPUT_DISABLE	0x00000000
#define	GCLK_CTRL_OOV_ZERO	0x00000000
#define	GCLK_CTRL_OOV_ONE	0x00040000
#define	GCLK_CTRL_IMPROVEDUTY50	0x00020000
#define	GCLK_CTRL_ENABLE	0x00010000
#define	GCLK_CTRL_DISABLE	0x00000000



typedef struct
{
	GCLKGEN id;
	GCLKSRC src;
	unsigned long flag;
	unsigned short div;
}GCLKGENCTRL;


//extern void UserClockInit(void);
void GClkGenInit( GCLKGENCTRL *tbl );
void ModuleClkInit( MduleClock *tbl );


#endif


